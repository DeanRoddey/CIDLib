// ----------------------------------------------------------------------------
//  FILE: CIDDocComp_Info.cpp
//  DATE: Mon, May 06 19:33:13 2019 -0400
//
//  This file was generated by the Charmed Quark CIDIDL compiler. Do not make
//  changes by hand, because they will be lost if the file is regenerated.
// ----------------------------------------------------------------------------

#include "CIDDocComp.hpp"

const TString kCIDDocComp::strExt_HelpPage(L"cidhpage");
const TString kCIDDocComp::strXML_ColSpan(L"ColSpan");
const TString kCIDDocComp::strXML_Extra(L"Extra");
const TString kCIDDocComp::strXML_Extra1(L"Extra1");
const TString kCIDDocComp::strXML_Extra2(L"Extra2");
const TString kCIDDocComp::strXML_FileExt(L"FileExt");
const TString kCIDDocComp::strXML_FileName(L"FileName");
const TString kCIDDocComp::strXML_HelpText(L"HelpText");
const TString kCIDDocComp::strXML_Id(L"Id");
const TString kCIDDocComp::strXML_PageLink(L"PageLink");
const TString kCIDDocComp::strXML_PageMap(L"PageMap");
const TString kCIDDocComp::strXML_Ref(L"Ref");
const TString kCIDDocComp::strXML_SubDir(L"SubDir");
const TString kCIDDocComp::strXML_SubTopicMap(L"SubTopicMap");
const TString kCIDDocComp::strXML_Title(L"Title");
const TString kCIDDocComp::strXML_TopicPage(L"TopicPage");
const TString kCIDDocComp::strXML_Type(L"Type");
const TString kCIDDocComp::strXML_Virtual(L"Virtual");


static TEnumMap::TEnumValItem aeitemValues_ETypes[21] = 
{
    {  tCIDLib::TInt4(tCIDDocComp::ETypes::None), 0, 0,  { L"", L"", L"", L"None", L"ETypes::None", L"" } }
  , {  tCIDLib::TInt4(tCIDDocComp::ETypes::Bold), 0, 0,  { L"", L"", L"", L"Bold", L"ETypes::Bold", L"" } }
  , {  tCIDLib::TInt4(tCIDDocComp::ETypes::Break), 0, 0,  { L"", L"", L"", L"Break", L"ETypes::Break", L"" } }
  , {  tCIDLib::TInt4(tCIDDocComp::ETypes::Code), 0, 0,  { L"", L"", L"", L"Code", L"ETypes::Code", L"" } }
  , {  tCIDLib::TInt4(tCIDDocComp::ETypes::DIV), 0, 0,  { L"", L"", L"", L"DIV", L"ETypes::DIV", L"" } }
  , {  tCIDLib::TInt4(tCIDDocComp::ETypes::Image), 0, 0,  { L"", L"", L"", L"Image", L"ETypes::Image", L"" } }
  , {  tCIDLib::TInt4(tCIDDocComp::ETypes::Indent), 0, 0,  { L"", L"", L"", L"Indent", L"ETypes::Indent", L"" } }
  , {  tCIDLib::TInt4(tCIDDocComp::ETypes::InlineNote), 0, 0,  { L"", L"", L"", L"InlineNote", L"ETypes::InlineNote", L"" } }
  , {  tCIDLib::TInt4(tCIDDocComp::ETypes::Italic), 0, 0,  { L"", L"", L"", L"Italic", L"ETypes::Italic", L"" } }
  , {  tCIDLib::TInt4(tCIDDocComp::ETypes::Link), 0, 0,  { L"", L"", L"", L"Link", L"ETypes::Link", L"" } }
  , {  tCIDLib::TInt4(tCIDDocComp::ETypes::List), 0, 0,  { L"", L"", L"", L"List", L"ETypes::List", L"" } }
  , {  tCIDLib::TInt4(tCIDDocComp::ETypes::ListItem), 0, 0,  { L"", L"", L"", L"ListItem", L"ETypes::ListItem", L"" } }
  , {  tCIDLib::TInt4(tCIDDocComp::ETypes::Note), 0, 0,  { L"", L"", L"", L"Note", L"ETypes::Note", L"" } }
  , {  tCIDLib::TInt4(tCIDDocComp::ETypes::Paragraph), 0, 0,  { L"", L"", L"", L"Paragraph", L"ETypes::Paragraph", L"" } }
  , {  tCIDLib::TInt4(tCIDDocComp::ETypes::SecTitle), 0, 0,  { L"", L"", L"", L"SecTitle", L"ETypes::SecTitle", L"" } }
  , {  tCIDLib::TInt4(tCIDDocComp::ETypes::SubSecTitle), 0, 0,  { L"", L"", L"", L"SubSecTitle", L"ETypes::SubSecTitle", L"" } }
  , {  tCIDLib::TInt4(tCIDDocComp::ETypes::Superscript), 0, 0,  { L"", L"", L"", L"Superscript", L"ETypes::Superscript", L"" } }
  , {  tCIDLib::TInt4(tCIDDocComp::ETypes::Table), 0, 0,  { L"", L"", L"", L"Table", L"ETypes::Table", L"" } }
  , {  tCIDLib::TInt4(tCIDDocComp::ETypes::TableCol), 0, 0,  { L"", L"", L"", L"TableCol", L"ETypes::TableCol", L"" } }
  , {  tCIDLib::TInt4(tCIDDocComp::ETypes::TableRow), 0, 0,  { L"", L"", L"", L"TableRow", L"ETypes::TableRow", L"" } }
  , {  tCIDLib::TInt4(tCIDDocComp::ETypes::Text), 0, 0,  { L"", L"", L"", L"Text", L"ETypes::Text", L"" } }

};

static TEnumMap emapETypes
(
     L"ETypes"
     , 21
     , kCIDLib::False
     , aeitemValues_ETypes
     , nullptr
     , tCIDLib::TCard4(tCIDDocComp::ETypes::Count)
);

tCIDLib::TBoolean tCIDDocComp::bIsValidEnum(const tCIDDocComp::ETypes eVal)
{
    return emapETypes.bIsValidEnum(tCIDLib::TCard4(eVal));

}

