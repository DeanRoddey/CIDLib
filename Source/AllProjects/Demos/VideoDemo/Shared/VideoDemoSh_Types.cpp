// ----------------------------------------------------------------------------
//  FILE: VideoDemoSh_Types.cpp
//  DATE: Tue, Jan 29 23:33:30 2019 -0500
//
//  This file was generated by the Charmed Quark CIDIDL compiler. Do not make
//  changes by hand, because they will be lost if the file is regenerated.
// ----------------------------------------------------------------------------

#include "VideoDemoSh_.hpp"



static TEnumMap::TEnumValItem aeitemValues_EStatus[4] = 
{
    {  tCIDLib::TInt4(tVideoDemoSh::EStatus::Divorced), 0, 0,  { L"", L"", L"", L"Divorced", L"EStatus::Divorced", L"" } }
  , {  tCIDLib::TInt4(tVideoDemoSh::EStatus::Married), 0, 0,  { L"", L"", L"", L"Married", L"EStatus::Married", L"" } }
  , {  tCIDLib::TInt4(tVideoDemoSh::EStatus::Single), 0, 0,  { L"", L"", L"", L"Single", L"EStatus::Single", L"" } }
  , {  tCIDLib::TInt4(tVideoDemoSh::EStatus::Widowed), 0, 0,  { L"", L"", L"", L"Widowed", L"EStatus::Widowed", L"" } }

};

static TEnumMap emapEStatus
(
     L"EStatus"
     , 4
     , kCIDLib::False
     , aeitemValues_EStatus
     , nullptr
     , tCIDLib::TCard4(tVideoDemoSh::EStatus::Count)
);

const TString& tVideoDemoSh::strXlatEStatus(const tVideoDemoSh::EStatus eVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return emapEStatus.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::BaseName, bThrowIfNot);
}

tVideoDemoSh::EStatus tVideoDemoSh::eXlatEStatus(const TString& strVal, const tCIDLib::TBoolean bThrowIfNot)
{
    return tVideoDemoSh::EStatus(emapEStatus.i4MapEnumText(strVal, TEnumMap::ETextVals::BaseName, bThrowIfNot));
}

TTextOutStream& operator<<(TTextOutStream& strmTar, const tVideoDemoSh::EStatus eVal)
{
    strmTar << emapEStatus.strMapEnumVal(tCIDLib::TCard4(eVal), TEnumMap::ETextVals::BaseName, kCIDLib::False);
    return strmTar;
}
TBinOutStream& operator<<(TBinOutStream& strmTar, const tVideoDemoSh::EStatus eVal)
{
    strmTar.WriteEnum(tCIDLib::TCard4(eVal));
    return strmTar;
}
TBinInStream& operator>>(TBinInStream& strmSrc, tVideoDemoSh::EStatus& eVal)
{
    eVal = (tVideoDemoSh::EStatus)strmSrc.c4ReadEnum();
    return strmSrc;
}
tCIDLib::TVoid TBinInStream_ReadArray(TBinInStream& strmSrc, tVideoDemoSh::EStatus* const aeList, const tCIDLib::TCard4 c4Count)
{    
    if (c4Count)
        strmSrc.ReadArray((tCIDLib::TCard4*)aeList, c4Count);
}
tCIDLib::TVoid TBinOutStream_WriteArray(TBinOutStream& strmTar, const tVideoDemoSh::EStatus* const aeList, const tCIDLib::TCard4 c4Count)
{
    if (c4Count)
        strmTar.WriteArray(reinterpret_cast<const tCIDLib::TCard4*>(aeList), c4Count);
}
tCIDLib::TBoolean tVideoDemoSh::bIsValidEnum(const tVideoDemoSh::EStatus eVal)
{
    return emapEStatus.bIsValidEnum(tCIDLib::TCard4(eVal));

}

