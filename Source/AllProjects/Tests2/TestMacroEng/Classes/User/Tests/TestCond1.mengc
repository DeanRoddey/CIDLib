Class=[Final]
    ClassPath MEng.User.Tests.TestCond1;
    ParentClass MEng.Object;
EndClass;

Imports=
    MEng.System.Runtime.ConsoleOutStream;
    MEng.User.Tests.TestHelpers;
EndImports;

Members=
    BaseInfo            m_BaseInfo;
    ConsoleOutStream    m_Output;
    Int4                m_RetVal;
    TestHelpers         m_Helper;
    Int4                m_Index;

    #BeginDebug
    Card4               m_TestCond;
    #EndDebug
EndMembers;

Methods=[Public,Final]

    Constructor() :
        m_RetVal(0);
    Begin
    EndConstructor;

    // Used in the testing of logical op short circuiting
    Method Start() Returns Int4
    Begin

        //
        //  Zero the index, and then do a set of conditional blocks that
        //  inc/dec the value.
        //
        m_Index := 0;
        #BeginDebug
            #BeginDebug
                #BeginDebug
                    m_Index++;
                #EndDebug
            #EndDebug
            m_Index++;

            #BeginDebug
                m_Index++;
            #EndDebug
        #EndDebug

        #BeginDebug
            m_Index--;

            // Do an empty block
            #BeginDebug
            #EndDebug

            #BeginDebug
                m_Index++;
            #EndDebug
        #EndDebug

        //
        //  We know now what it's value should be if in normal or debug
        //  mode, since either would have caused a particular set of
        //  inc/dec operations.
        //
        If (m_BaseInfo.IsInDebugMode())
            If (m_Index != 3)
                m_Helper.PrintErr("Debug mode failed", m_Output, $CurLine);
                m_RetVal := -1;
            EndIf;
        Else
            If (m_Index != 0)
                m_Helper.PrintErr("Non-debug mode failed", m_Output, $CurLine);
                m_RetVal := -1;
            EndIf;
        EndIf;

        #BeginDebug
            m_TestCond := 1;
        #EndDebug

        #BeginDebug
            If (m_TestCond != 1)
                m_Helper.PrintErr("Conditional member not set", m_Output, $CurLine);
                m_RetVal := -1;
            EndIf;
        #EndDebug

        m_Output.Flush();
        Return m_RetVal;
    EndMethod;

EndMethods;



